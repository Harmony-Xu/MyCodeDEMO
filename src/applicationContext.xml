<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context-4.0.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- 开启注解 -->
	<context:component-scan base-package="com"/>
	<!-- 加载属性文件 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/clouddemo?characterEncoding=utf-8"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
		<!--initialSize: 初始化连接--> 
		<property name="initialSize" value="5"/> 
		<!--maxIdle: 最大空闲连接--> 
		<property name="maxIdle" value="10"/> 
		<!--minIdle: 最小空闲连接--> 
		<property name="minIdle" value="5"/> 
		<!--maxActive: 最大连接数量--> 
		<property name="maxActive" value="15"/>
	
		<!--removeAbandoned: 是否自动回收超时连接--> 
		<property name="removeAbandoned" value="true"/> 
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位)--> 
		<property name="removeAbandonedTimeout" value="180"/> 
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒--> 
		<property name="maxWait" value="3000"/> 
		<!-- 在空闲连接回收器执行周期(毫秒) -->
		<property name="timeBetweenEvictionRunsMillis" value="10000"/>
		<!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="10"/>
		<!-- 最小空闲时间-->
		<property name="minEvictableIdleTimeMillis" value="10000"/>
		<!-- 验证链接是否有效的sql语句 -->
		<property name="validationQuery" value="select 1" />
		<!-- 获取链接之前是否测试链接的可用性 -->
		<property name="testOnBorrow" value="true"/> 
	</bean>
	
  	<!-- 集成mybatis，首先要配置SQLSessionFactoryBean -->
  	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource"/>
  		<!-- 对应mybatis-config.xml中实体类所在的包，别名 -->
  		<property name="typeAliasesPackage" value="com.wisoft.pojo"/>
  		<!-- 对应mybatis-config.xml中Daomapper映射文件，加载类路径src下面 -->
  		<!-- <property name="mapperLocations" value="classpath:cn/dao/impl/*Mapper.xml"/> -->
  	</bean>
  	<!-- 配置Mapper扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 设置Mapper扫描包 遇到多个包的时候，在包后面用逗号隔开 -->
		<property name="basePackage" value="com.wisoft.mapper" />
	</bean>
  	
  	<!-- 配置一个事务管理器 -->
  	<bean id="dataSourceManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	<!-- 使用注解配置spring事务 -->
    <tx:annotation-driven transaction-manager="dataSourceManager"/>
    <!-- 配置一个事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="dataSourceManager">
		<!-- 指定事务的传播特性和隔离级别 -->
		<tx:attributes>
			<!-- 默认使用事务 -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS" timeout="60"
                    rollback-for="java.lang.RuntimeException,java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<!--切入点  -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution (* com.wisoft.service..*.*(..))"/>
	</aop:config>
</beans>     